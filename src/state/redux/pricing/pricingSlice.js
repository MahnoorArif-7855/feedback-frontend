import { PayloadAction, createAsyncThunk, createSlice } from '@reduxjs/toolkit';

import { createSessionAPI } from './pricingAPI';

const initialState = {
  session: null,
};

export const createSession = createAsyncThunk(
  'pricing/createSession',
  async ({ user, email, organizations, customerId, freeTrail }, { dispatch }) => {
    await createSessionAPI({
      user,
      email,
      organizations,
      customerId,
      freeTrail,
      dispatch,
    });
  }
);

export const authSlice = createSlice({
  name: 'pricing',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    // Use the PayloadAction type to declare the contents of `action.payload`
    createSession: (state, action) => {
      state.session = action.payload;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {},
});

export const { G2Reviewsreducer, zendeskReducer } = authSlice.actions;

export default authSlice.reducer;
